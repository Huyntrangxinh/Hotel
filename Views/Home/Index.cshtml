@{
    ViewData["Title"] = "Trang chủ";
}

<style>
    :root {
        --booking-blue-dark: #003580;
        --booking-blue-light: #006ce4;
        --booking-yellow: #febb02;
        --border-color: #ced4da;
    }

    /* Search container - copy from Search page */
    .search-container {
        background: var(--booking-blue-dark);
        padding: 10px 0 20px;
    }

    .search-box {
        max-width: 1100px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .search-form {
        background: var(--booking-yellow);
        border-radius: 8px;
        padding: 4px;
        display: grid;
        grid-template-columns: 1fr auto auto 120px;
        gap: 4px;
        align-items: center;
    }

    .search-input-group {
        background: white;
        display: flex;
        align-items: center;
        padding: 0 10px;
        border-radius: 4px;
        height: 48px;
        position: relative;
    }

    .search-input-group i {
        font-size: 20px;
        color: #666;
        margin-right: 8px;
    }

    .search-input-group input,
    .search-input-group .date-display,
    .search-input-group .guests-display {
        border: none;
        outline: none;
        width: 100%;
        height: 100%;
        font-size: 14px;
        background: transparent;
        color: #333;
    }

    .date-display,
    .guests-display {
        display: flex;
        align-items: center;
        cursor: pointer;
        color: #333;
        font-weight: 500;
    }

    .search-btn {
        background: var(--booking-blue-light);
        color: white;
        border: none;
        height: 48px;
        border-radius: 4px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: background 0.3s;
    }

    .search-btn:hover {
        background: #005a9b;
    }

    /* Dropdown chọn khách */
    #guestDropdown {
        top: calc(100% + 8px);
        left: 0;
        width: 350px;
        color: #333;
    }

    .hover-bg:hover {
        background-color: #f0f2f5;
    }

    /* Disable button khi ở giá trị minimum */
    .btn:disabled {
        opacity: 0.3;
        cursor: not-allowed;
    }

    /* Custom Date Picker */
    .date-picker-dropdown {
        position: absolute;
        top: 100%;
        left: 0;
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        z-index: 1050;
        width: 600px;
        padding: 20px;
        margin-top: 4px;
    }

    .date-picker-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #e0e0e0;
    }

    .date-picker-tabs {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .date-tab {
        padding: 8px 16px;
        border: none;
        background: none;
        cursor: pointer;
        font-size: 14px;
        color: #666;
        border-bottom: 2px solid transparent;
    }

    .date-tab.active {
        color: #006ce4;
        border-bottom-color: #006ce4;
    }

    .calendar-container {
        display: flex;
        gap: 30px;
    }

    .calendar-month {
        flex: 1;
    }

    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .calendar-nav {
        background: none;
        border: none;
        font-size: 18px;
        cursor: pointer;
        color: #666;
        padding: 5px;
    }

    .calendar-nav:hover {
        color: #006ce4;
    }

    .month-year {
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 2px;
    }

    .calendar-day-header {
        text-align: center;
        padding: 8px 4px;
        font-size: 12px;
        font-weight: 600;
        color: #666;
    }

    .calendar-day {
        text-align: center;
        padding: 8px 4px;
        cursor: pointer;
        border-radius: 4px;
        font-size: 14px;
        color: #333;
        position: relative;
    }

    .calendar-day:hover:not(.disabled) {
        background-color: #f0f2f5;
    }

    .calendar-day.selected {
        background-color: #006ce4;
        color: white;
    }

    .calendar-day.in-range {
        background-color: #e3f2fd;
        color: #006ce4;
        border-radius: 0;
    }

    .calendar-day.start-range {
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
    }
    
    .calendar-day.end-range {
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
    }

    .calendar-day.disabled {
        color: #ccc;
        cursor: not-allowed;
        text-decoration: line-through;
    }

    .date-picker-footer {
        margin-top: 20px;
        padding-top: 15px;
        border-top: 1px solid #e0e0e0;
        display: flex;
        gap: 10px;
    }

    .duration-btn {
        padding: 8px 16px;
        border: 1px solid #e0e0e0;
        background: white;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        color: #333;
    }

    .duration-btn.active {
        border-color: #006ce4;
        color: #006ce4;
    }

    @@media (max-width: 992px) {
        .search-form {
            grid-template-columns: 1fr;
            gap: 8px;
        }
        .search-input-group {
            min-height: 48px;
        }
    }
</style>

<!-- HERO + SEARCH -->
<section class="py-5" style="background:#003580; color:#fff;">
    <div class="container">
        <h1 class="fw-bold display-5 mb-2">Trang, kế tiếp bạn sẽ du lịch đến đâu?</h1>
        <p class="fs-5 mb-4">Tìm ưu đãi Genius đặc biệt tại khắp nơi trên thế giới!</p>

        <div class="search-box">
            <form class="search-form" method="get" action="/Public/Search">
                <!-- Hidden inputs for guest and room data -->
                <input type="hidden" id="adultsInput" name="adults" value="2" />
                <input type="hidden" id="childrenInput" name="children" value="0" />
                <input type="hidden" id="roomsInput" name="rooms" value="1" />

                <!-- Destination -->
                <div class="search-input-group position-relative">
                    <i class="bi bi-search"></i>
                    <input id="destinationInput" name="destination" placeholder="Bạn muốn đến đâu?" autocomplete="off" />
                    <div id="destinationDropdown" class="bg-white border rounded-3 shadow-sm position-absolute w-100 d-none" style="z-index:1050; max-height:360px; overflow-y:auto; top:100%; left:0; margin-top: 4px;"></div>
                </div>

                <!-- Date Range -->
                <div class="search-input-group position-relative">
                    <i class="bi bi-calendar3"></i>
                    <div class="date-display" id="dateDisplay">Chọn ngày</div>
                    <input name="checkin" type="hidden" id="checkinInput" />
                    <input name="checkout" type="hidden" id="checkoutInput" />

                    <!-- Custom Date Picker Dropdown -->
                    <div id="datePickerDropdown" class="date-picker-dropdown d-none">
                        <div class="date-picker-header">
                            <div>
                                <span id="selectedDateRange">Chọn ngày</span>
                            </div>
                            <div>
                                <span id="selectedGuestsHeader">2 người lớn • 0 trẻ em • 1 phòng</span>
                            </div>
                        </div>

                        <div class="date-picker-tabs">
                            <button type="button" class="date-tab active" data-tab="calendar">Lịch</button>
                            <button type="button" class="date-tab" data-tab="flexible">Ngày linh hoạt</button>
                        </div>

                        <div id="calendarTab" class="tab-content">
                            <div class="calendar-container">
                                <div class="calendar-month">
                                    <div class="calendar-header">
                                        <button type="button" class="calendar-nav" data-direction="-1">&lt;</button>
                                        <div class="month-year" id="month1"></div>
                                        <button type="button" class="calendar-nav" data-direction="1">&gt;</button>
                                    </div>
                                    <div class="calendar-grid" id="calendar1"></div>
                                </div>
                                <div class="calendar-month">
                                    <div class="calendar-header">
                                        <div class="month-year" id="month2"></div>
                                    </div>
                                    <div class="calendar-grid" id="calendar2"></div>
                                </div>
                            </div>
                        </div>

                        <div id="flexibleTab" class="tab-content d-none">
                             <p class="text-muted small">Tính năng đang được phát triển.</p>
                        </div>

                        <!-- Apply button -->
                        <div class="date-picker-apply" style="margin-top: 15px; text-align: right;">
                            <button type="button" id="applyDateBtn" class="btn btn-primary" style="padding: 8px 20px; font-size: 14px;">Áp dụng</button>
                        </div>
                    </div>
                </div>

                <!-- Guests & Rooms -->
                <div class="search-input-group position-relative">
                    <i class="bi bi-person"></i>
                    <div class="guests-display" id="guestText">2 người lớn · 0 trẻ em · 1 phòng</div>

                    <!-- Guest Dropdown -->
                    <div id="guestDropdown" class="bg-white border rounded-3 shadow-sm position-absolute d-none" style="z-index:1050; padding:16px; top:100%; left:0; margin-top: 4px;">
                        <div class="d-flex justify-content-between align-items-center py-2">
                            <div><div class="fw-semibold">Người lớn</div></div>
                            <div class="d-flex align-items-center gap-3">
                                <button type="button" class="btn btn-outline-secondary btn-sm rounded-circle" data-type="adults" data-change="-1" style="width:32px; height:32px;">−</button>
                                <span id="adultsCount" class="fw-semibold" style="width:20px; text-align:center;">2</span>
                                <button type="button" class="btn btn-outline-secondary btn-sm rounded-circle" data-type="adults" data-change="1" style="width:32px; height:32px;">+</button>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center py-2">
                            <div>
                                <div class="fw-semibold">Trẻ em</div>
                                <div class="small text-muted">0-17 tuổi</div>
                            </div>
                            <div class="d-flex align-items-center gap-3">
                                <button type="button" class="btn btn-outline-secondary btn-sm rounded-circle" data-type="children" data-change="-1" style="width:32px; height:32px;">−</button>
                                <span id="childrenCount" class="fw-semibold" style="width:20px; text-align:center;">0</span>
                                <button type="button" class="btn btn-outline-secondary btn-sm rounded-circle" data-type="children" data-change="1" style="width:32px; height:32px;">+</button>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center py-2">
                            <div><div class="fw-semibold">Phòng</div></div>
                            <div class="d-flex align-items-center gap-3">
                                <button type="button" class="btn btn-outline-secondary btn-sm rounded-circle" data-type="rooms" data-change="-1" style="width:32px; height:32px;">−</button>
                                <span id="roomsCount" class="fw-semibold" style="width:20px; text-align:center;">1</span>
                                <button type="button" class="btn btn-outline-secondary btn-sm rounded-circle" data-type="rooms" data-change="1" style="width:32px; height:32px;">+</button>
                            </div>
                        </div>
                        <hr class="my-2">
                        <button type="button" id="closeGuestDropdownBtn" class="btn btn-link w-100 mt-1">Xong</button>
                    </div>
                </div>

                <!-- Search Button -->
                <button type="submit" class="search-btn">Tìm</button>
            </form>
        </div>
    </div>
</section>

<!-- DEALS from DB - carousel style -->
<section class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h5 class="section-title mb-0">Ưu đãi</h5>
        <a asp-controller="Promo" asp-action="Index" class="btn btn-outline-primary btn-sm">Xem tất cả ưu đãi</a>
    </div>
    <div id="dealsCarousel" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
            @{
                var discounts = (ViewBag.Discounts as IEnumerable<HotelBooking.Models.Discount>)?.ToList() ?? new List<HotelBooking.Models.Discount>();
            }
            @if (discounts.Count > 0)
            {
                for (int i = 0; i < discounts.Count; i += 3)
                {
                    var active = i == 0 ? "active" : "";
                    <div class="carousel-item @active">
                        <div class="row g-3">
                            @for (int j = 0; j < 3 && (i + j) < discounts.Count; j++)
                            {
                                var item = discounts[i + j];
                                <div class="col-12 col-md-6 col-lg-4">
                                    <a href="/Promo/@item.Id" class="text-decoration-none text-reset">
                                        <div class="card h-100 shadow-sm">
                                            @if (!string.IsNullOrWhiteSpace(item.ImageUrl))
                                            {
                                                <img src="@item.ImageUrl" class="card-img-top object-fit-cover" style="height:180px;" alt="">
                                            }
                                            <div class="card-body">
                                                <h6 class="fw-bold mb-1">@item.Title</h6>
                                                <small class="text-muted">Mã: <code>@item.Code</code></small>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="carousel-item active">
                    <div class="text-muted p-4">Chưa có ưu đãi.</div>
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#dealsCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#dealsCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</section>

<!-- FEATURED -->
<section class="container my-4">
    <h5 class="section-title mb-3">Lưu trú độc đáo hàng đầu</h5>
    <div class="row g-3">
        <div class="col-12 col-md-6 col-lg-4">
            <div class="card h-100 shadow-sm">
                <img src="~/img/nb.jpg" class="card-img-top object-fit-cover" style="height:220px;" alt="Phong cảnh Ninh Bình">
                <div class="card-body">
                    <h6 class="fw-bold mb-1">Ninh Bình</h6>
                    <small class="text-muted">Phong cảnh thiên nhiên</small>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4">
            <div class="card h-100 shadow-sm">
                <img src="~/img/dn.jpg" class="card-img-top object-fit-cover" style="height:220px;" alt="Bãi biển Đà Nẵng">
                <div class="card-body">
                    <h6 class="fw-bold mb-1">Đà Nẵng</h6>
                    <small class="text-muted">Biển & ẩm thực</small>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 col-lg-4">
            <div class="card h-100 shadow-sm">
                <img src="~/img/dl.jpg" class="card-img-top object-fit-cover" style="height:220px;" alt="Đồi thông Đà Lạt">
                <div class="card-body">
                    <h6 class="fw-bold mb-1">Đà Lạt</h6>
                    <small class="text-muted">Không khí se lạnh</small>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
<script>
document.addEventListener('DOMContentLoaded', function() {
    
    // --- STATE VARIABLES ---
    let guests = { adults: 2, children: 0, rooms: 1 };
    let currentDate = new Date();
    let selectedDates = { checkin: null, checkout: null };

    // --- DOM ELEMENTS ---
    const searchForm = document.querySelector('form[action="/Public/Search"]');
    const destinationInput = document.getElementById('destinationInput');
    const destinationDropdown = document.getElementById('destinationDropdown');
    
    const guestText = document.getElementById('guestText');
    const guestDropdown = document.getElementById('guestDropdown');
    const adultsInput = document.getElementById('adultsInput');
    const childrenInput = document.getElementById('childrenInput');
    const roomsInput = document.getElementById('roomsInput');

    const dateDisplay = document.getElementById('dateDisplay');
    const datePickerDropdown = document.getElementById('datePickerDropdown');
    const checkinInput = document.getElementById('checkinInput');
    const checkoutInput = document.getElementById('checkoutInput');
    const allDropdowns = [guestDropdown, datePickerDropdown, destinationDropdown];

    // --- HELPER FUNCTIONS ---
    const formatDate = (date) => {
        if (!date) return '';
        const y = date.getFullYear();
        const m = String(date.getMonth() + 1).padStart(2, '0');
        const d = String(date.getDate()).padStart(2, '0');
        return `${y}-${m}-${d}`;
    };

    const formatDisplayDate = (date) => {
        if (!date || isNaN(date.getTime())) return '';
        return date.toLocaleDateString('vi-VN', { weekday: 'short', day: 'numeric', month: 'numeric' });
    };

    const isSameDay = (d1, d2) => d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();
    
    // --- RECENT SEARCH & DESTINATION DROPDOWN ---
    const recentKey = 'hb_recent_searches';
    const getRecent = () => {
        try { return JSON.parse(localStorage.getItem(recentKey) || '[]'); } catch { return []; }
    };
    const setRecent = (items) => {
        localStorage.setItem(recentKey, JSON.stringify(items.slice(0, 5)));
    };
    
    function renderDestinationDropdown() {
        // This function builds and shows the dropdown for recent/trending destinations
        const items = getRecent();
        const trending = [
            { city: 'Hà Nội', country: 'Việt Nam' }, { city: 'Ninh Bình', country: 'Việt Nam' },
            { city: 'Sa Pa', country: 'Việt Nam' }, { city: 'Đà Nẵng', country: 'Việt Nam' },
            { city: 'Hạ Long', country: 'Việt Nam' }
        ];

        let html = '';
        if (items.length > 0) {
            html += '<div class="p-3 border-bottom text-dark"><strong>Tìm kiếm gần đây</strong></div>';
            items.forEach(x => {
                const checkinDate = x.checkin ? new Date(x.checkin) : null;
                const checkoutDate = x.checkout ? new Date(x.checkout) : null;
                const dateString = (checkinDate && checkoutDate) 
                    ? `${formatDisplayDate(checkinDate)} – ${formatDisplayDate(checkoutDate)}` : '';
                html += `<div class="px-3 py-2 d-flex align-items-center gap-2 hover-bg" style="cursor:pointer" data-city="${x.city}">...</div>`;
            });
        }
        html += '<div class="p-3 text-dark"><strong>Các điểm đến thịnh hành</strong></div>';
        trending.forEach(t => {
            html += `<div class="px-3 py-2 d-flex align-items-center gap-2 hover-bg" style="cursor:pointer" data-city="${t.city}">...</div>`;
        });
        destinationDropdown.innerHTML = html.replace(/\.\.\./g, (match, offset, string) => {
            if (string.includes('data-city')) { // lazy way to differentiate between the two sections
                 return `<i class="bi bi-arrow-counterclockwise"></i><div><div class="fw-semibold text-dark">${string.match(/data-city="([^"]+)"/)[1]}</div><small class="text-muted">${string.match(/<small[^>]*>([^<]+)<\/small>/) ? string.match(/<small[^>]*>([^<]+)<\/small>/)[1] : ''}</small></div>`;
            } else {
                 return `<i class="bi bi-geo-alt"></i><div><div class="fw-semibold text-dark">${string.match(/data-city="([^"]+)"/)[1]}</div><small class="text-muted">Việt Nam</small></div>`;
            }
        });
    }

    // --- GUEST SELECTION LOGIC ---
    function updateGuestText() {
        const text = `${guests.adults} người lớn · ${guests.children} trẻ em · ${guests.rooms} phòng`;
        guestText.textContent = text;
        document.getElementById('selectedGuestsHeader').textContent = text;
        
        adultsInput.value = guests.adults; childrenInput.value = guests.children; roomsInput.value = guests.rooms;
        document.getElementById('adultsCount').textContent = guests.adults;
        document.getElementById('childrenCount').textContent = guests.children;
        document.getElementById('roomsCount').textContent = guests.rooms;

        document.querySelector('button[data-type="adults"][data-change="-1"]').disabled = guests.adults <= 1;
        document.querySelector('button[data-type="children"][data-change="-1"]').disabled = guests.children <= 0;
        document.querySelector('button[data-type="rooms"][data-change="-1"]').disabled = guests.rooms <= 1;
    }

    // --- DATE PICKER LOGIC ---
    function renderCalendar() {
        const year = currentDate.getFullYear(); const month = currentDate.getMonth();
        const renderMonth = (containerId, date) => {
            const calContainer = document.getElementById(containerId);
            const m = date.getMonth(); const y = date.getFullYear();
            document.getElementById(containerId.replace('calendar', 'month')).textContent = `tháng ${m + 1} năm ${y}`;
            
            calContainer.innerHTML = '';
            const dayHeaders = ['T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'CN'];
            calContainer.innerHTML += dayHeaders.map(d => `<div class="calendar-day-header">${d}</div>`).join('');
            
            const firstDayOfMonth = (new Date(y, m, 1).getDay() + 6) % 7; // 0=Mon
            const daysInMonth = new Date(y, m + 1, 0).getDate();
            for (let i = 0; i < firstDayOfMonth; i++) { calContainer.innerHTML += '<div></div>'; }

            const today = new Date(); today.setHours(0, 0, 0, 0);

            for (let day = 1; day <= daysInMonth; day++) {
                const dayDate = new Date(y, m, day);
                const dayEl = document.createElement('div');
                dayEl.textContent = day; dayEl.classList.add('calendar-day'); dayEl.dataset.date = formatDate(dayDate);

                if (dayDate < today) { dayEl.classList.add('disabled'); } 
                else { dayEl.addEventListener('click', () => selectDate(dayDate)); }

                if (selectedDates.checkin && isSameDay(dayDate, selectedDates.checkin)) dayEl.classList.add('selected', 'start-range');
                if (selectedDates.checkout && isSameDay(dayDate, selectedDates.checkout)) dayEl.classList.add('selected', 'end-range');
                if (selectedDates.checkin && selectedDates.checkout && dayDate > selectedDates.checkin && dayDate < selectedDates.checkout) {
                    dayEl.classList.add('in-range');
                }
                calContainer.appendChild(dayEl);
            }
        };
        renderMonth('calendar1', new Date(year, month)); renderMonth('calendar2', new Date(year, month + 1));
    }

    function selectDate(date) {
        if (selectedDates.checkin && !selectedDates.checkout && date > selectedDates.checkin) {
            selectedDates.checkout = date;
        } else {
            selectedDates.checkin = date; selectedDates.checkout = null;
        }
        updateDateDisplays(); renderCalendar();
    }
    
    function updateDateDisplays() {
        const { checkin, checkout } = selectedDates;
        checkinInput.value = formatDate(checkin); checkoutInput.value = formatDate(checkout);
        const header = document.getElementById('selectedDateRange');
        if (checkin && checkout) {
            dateDisplay.textContent = `${formatDisplayDate(checkin)} – ${formatDisplayDate(checkout)}`;
            header.textContent = `${formatDisplayDate(checkin)} — ${formatDisplayDate(checkout)}`;
        } else if (checkin) {
            dateDisplay.textContent = `${formatDisplayDate(checkin)} – Chọn ngày về`;
            header.textContent = `${formatDisplayDate(checkin)} — Chọn ngày về`;
        } else {
             dateDisplay.textContent = 'Chọn ngày'; header.textContent = 'Chọn ngày';
        }
    }

    // --- TOGGLE DROPDOWNS & EVENT LISTENERS ---
    // This is the main fix: we stop clicks inside dropdowns from closing themselves.
    allDropdowns.forEach(dd => dd.addEventListener('click', e => e.stopPropagation()));
    
    // Open dropdowns on trigger click/focus
    guestText.addEventListener('click', (e) => { e.stopPropagation(); guestDropdown.classList.toggle('d-none'); });
    dateDisplay.addEventListener('click', (e) => {
        e.stopPropagation();
        if (datePickerDropdown.classList.contains('d-none')) renderCalendar();
        datePickerDropdown.classList.toggle('d-none');
    });
    destinationInput.addEventListener('click', (e) => {
        e.stopPropagation();
        renderDestinationDropdown();
        destinationDropdown.classList.remove('d-none');
    });
    destinationInput.addEventListener('focus', () => { // Also open on focus
        renderDestinationDropdown();
        destinationDropdown.classList.remove('d-none');
    });

    // Handle clicks on close buttons or specific actions within dropdowns
    document.getElementById('closeGuestDropdownBtn').addEventListener('click', () => guestDropdown.classList.add('d-none'));
    document.getElementById('applyDateBtn').addEventListener('click', () => datePickerDropdown.classList.add('d-none'));
    destinationDropdown.addEventListener('click', (e) => {
        if (e.target.closest('[data-city]')) {
            destinationInput.value = e.target.closest('[data-city]').dataset.city;
            destinationDropdown.classList.add('d-none');
        }
    });

    // Add listeners for guest count changes
    guestDropdown.addEventListener('click', (e) => {
        const btn = e.target.closest('button[data-type]');
        if (btn) {
            const type = btn.dataset.type; const change = parseInt(btn.dataset.change);
            guests[type] += change; updateGuestText();
        }
    });
    
    // Listeners for calendar navigation
    document.querySelectorAll('.calendar-nav').forEach(nav => {
        nav.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() + parseInt(nav.dataset.direction));
            renderCalendar();
        });
    });

    // Global click listener to close all dropdowns
    document.addEventListener('click', () => {
        allDropdowns.forEach(dd => dd.classList.add('d-none'));
    });

    // --- FORM SUBMISSION ---
    searchForm.addEventListener('submit', (e) => {
        const destination = destinationInput.value.trim();
        const checkin = checkinInput.value;
        const checkout = checkoutInput.value;

        if (!destination) { e.preventDefault(); alert('Vui lòng nhập điểm đến.'); destinationInput.focus(); return; }
        if (!checkin || !checkout) { e.preventDefault(); alert('Vui lòng chọn ngày nhận và trả phòng.'); return; }

        const items = getRecent();
        const key = `${destination}|${checkin}|${checkout}`;
        const filtered = items.filter(x => `${x.city}|${x.checkin}|${x.checkout}` !== key);
        filtered.unshift({ city: destination, checkin, checkout });
        setRecent(filtered);
    });

    // --- INITIALIZATION ---
    function init() {
        const today = new Date(); const tomorrow = new Date(); tomorrow.setDate(today.getDate() + 1);
        selectedDates.checkin = today; selectedDates.checkout = tomorrow;
        updateGuestText(); updateDateDisplays();
    }

    init();
});
</script>
}

