@model IEnumerable<HotelBooking.Models.Property>

@{
    ViewData["Title"] = "Cơ sở lưu trú của bạn";
}

@section Head {
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Inter', sans-serif;
        }

        .header-section {
            border-bottom: 1px solid #dee2e6;
            padding-bottom: 1rem;
        }

        .property-list-item {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
            display: flex;
            overflow: hidden;
        }

        .property-list-item:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        }

        .property-image {
            background-color: #e9ecef;
            min-width: 200px;
            max-width: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }

        .property-image i {
            font-size: 4rem;
            color: #adb5bd;
        }

        .property-status-badge {
            position: absolute;
            top: 1rem;
            left: 1rem;
        }

        .property-content {
            padding: 1rem 1.5rem;
            flex-grow: 1;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .property-name {
            font-weight: 600;
            color: #212529;
            font-size: 1.1rem;
        }

        .property-info {
            font-size: 0.85rem;
            color: #6c757d;
            margin-top: 0.5rem;
        }

        .info-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.25rem;
        }

        .property-actions {
            min-width: 180px;
            text-align: right;
        }

        .empty-state {
            background-color: white;
            border-radius: 12px;
            padding: 4rem;
        }
    </style>
}

<div class="container py-4">
    <!-- Header Section -->
    <div class="header-section d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 fw-bold text-dark">Cơ sở lưu trú của bạn</h1>
            <p class="text-muted mb-0">Quản lý tất cả cơ sở lưu trú của bạn tại đây</p>
        </div>
        <div>
            <a asp-action="RegisterNewProperty" class="btn btn-primary">
                <i class="bi bi-plus-circle-fill me-1"></i>Đăng ký cơ sở mới
            </a>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center empty-state">
            <i class="bi bi-buildings display-1 text-muted"></i>
            <h3 class="mt-3 text-dark fw-light">Chưa có cơ sở lưu trú nào được tạo</h3>
            <p class="text-muted">Hãy bắt đầu bằng cách đăng ký cơ sở lưu trú đầu tiên của bạn.</p>
            <a asp-action="RegisterNewProperty" class="btn btn-primary mt-3">
                <i class="bi bi-plus-circle me-2"></i>Đăng ký ngay
            </a>
        </div>
    }
    else
    {
        <!-- Properties List -->
        <div class="d-flex flex-column gap-3">
            @foreach (var property in Model)
            {
                <div class="property-list-item">
                    <div class="property-image">
                        @{
                            var thumbUrl = (ViewBag.PropertyThumbs as System.Collections.Generic.Dictionary<int,
                            string>)?.GetValueOrDefault(property.Id);
                        }
                        @if (!string.IsNullOrWhiteSpace(thumbUrl))
                        {
                            <img src="@thumbUrl" alt="thumb" style="width:100%;height:100%;object-fit:cover;" />
                        }
                        else
                        {
                            <i class="bi bi-image-alt"></i>
                        }
                        <div class="property-status-badge">
                            @switch (property.Status)
                            {
                                case PropertyStatus.Draft:
                                    <span class="badge bg-secondary">Bản nháp</span>
                                    break;
                                case PropertyStatus.Submitted:
                                    <span class="badge bg-info">Đã gửi</span>
                                    break;
                                case PropertyStatus.UnderReview:
                                    <span class="badge bg-warning text-dark">Đang xem xét</span>
                                    break;
                                case PropertyStatus.Approved:
                                    <span class="badge bg-success">Đã phê duyệt</span>
                                    break;
                                case PropertyStatus.Rejected:
                                    <span class="badge bg-danger">Bị từ chối</span>
                                    break;
                            }
                        </div>
                    </div>

                    <div class="property-content">
                        <div>
                            <h2 class="property-name mb-1">@property.Name</h2>
                            <div class="property-info">
                                <div class="info-item">
                                    <i class="bi bi-geo-alt"></i>
                                    <span>@(string.IsNullOrEmpty(property.AddressLine) ? "Chưa có địa chỉ" :
                                                                        property.AddressLine)</span>
                                </div>
                                <div class="info-item">
                                    <i class="bi bi-calendar-event"></i>
                                    <span>Tạo ngày: @property.CreatedAt.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>
                        </div>

                        <div class="property-actions">
                            <div class="d-flex gap-2 justify-content-end">
                                @if (property.Status == PropertyStatus.Draft)
                                {
                                    <a asp-action="PropertyDetail" asp-route-id="@property.Id" class="btn btn-primary">
                                        <i class="bi bi-pencil-fill me-1"></i>Tiếp tục
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="PropertyDetail" asp-route-id="@property.Id" class="btn btn-outline-secondary">
                                        <i class="bi bi-eye-fill me-1"></i>Xem
                                    </a>
                                }
                                @if (property.Status == PropertyStatus.Approved)
                                {
                                    <a asp-action="Onboarding" asp-route-propertyId="@property.Id" class="btn btn-outline-primary">
                                        <i class="bi bi-gear me-1"></i>Chỉnh sửa
                                    </a>
                                }
                                <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal"
                                    data-bs-target="#deleteConfirmModal" data-property-id="@property.Id"
                                    data-property-name="@property.Name">
                                    <i class="bi bi-trash-fill"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa cơ sở lưu trú</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa vĩnh viễn cơ sở lưu trú <strong id="propertyNameInModal"></strong> không?
                    Hành động này không thể được hoàn tác.</p>
            </div>
            <div class="modal-footer">
                <form asp-action="DeleteProperty" method="post" id="deleteForm">
                    <input type="hidden" id="propertyIdToDelete" name="id" value="" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger">Xóa vĩnh viễn</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteConfirmModal');
        if (deleteModal) {
            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;

                const propertyId = button.getAttribute('data-property-id');
                const propertyName = button.getAttribute('data-property-name');

                const hiddenInput = deleteModal.querySelector('#propertyIdToDelete');
                hiddenInput.value = propertyId;

                const propertyNameElement = deleteModal.querySelector('#propertyNameInModal');
                propertyNameElement.textContent = propertyName;
            });
        }
    </script>
}
